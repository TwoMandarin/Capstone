import React, { Component } from 'react';import RecruitService from '../service/RecruitService';import { Link,withRouter } from "react-router-dom";import Pagination from "react-js-pagination";import './css/Recruit.css';import Home from "./image/Home.png";class ListRecruitComponent extends Component {    constructor(props) {        super(props)        this.state = {            recruits: [], // 페이지에 표시될 글 목록 데이터            /* p_num: 1, // 페이지 번호            paging: {}, // 페이징 처리 객체 */            activePage: 15        }        // 작성 버튼 클릭 시 createRecruit 동작        this.createRecruit = this.createRecruit.bind(this);    }    // RecruitService의 메소드 호출해서 데이터 가져옴    componentDidMount() {        RecruitService.getRecruits().then((res) => {            this.setState({                recruits: res.data,                /* p_num: res.data.pagingData.currentPageNum,                paging: res.data.pagingData */            });        });    }    // 작성 버튼 클릭 시 글 작성 페이지로 이동    createRecruit() {        this.props.history.push('/createRecruit/_create')    }    // 제목 클릭 시 상세보기 페이지로 이동    readRecruit(recruit_id) {        this.props.history.push(`/readRecruit/${recruit_id}`);    }    handlePageChange(pageNumber) {        console.log(`active page is ${pageNumber}`);        this.setState({activePage: pageNumber});      }    // 지정 페이지에 해당하는 글 목록과 페이지 객체 가져옴    /* listRecruit(p_num) {        console.log("pageNum : "+ p_num);        RecruitService.getRecruits(p_num).then((res) => {            console.log(res.data);            this.setState({                 *//* p_num: res.data.pagingData.currentPageNum,                paging: res.data.pagingData, *//*                recruits: res.data.list            });        });    } */    // 페이지 버튼 표시    /* viewPaging() {        const pageNums = [];        for(let i = this.state.paging.pageNumStart; i <= this.state.paging.pageNumEnd; i++) {            pageNums.push(i);        }        return (pageNums.map((page) =>            <li className="page-item" key={page.toString()}>                <a className="page-link" onClick = {() => this.listRecruit(page)}>{page}</a>            </li>        ));    } */    // 이전 페이지 이동 버튼    /* isPagingPrev() {        if(this.state.paging.prev) {            return (                <li className="page-item">                    <a className="page-link" onClick = {() => this.listRecruit( (this.state.paging.currentPageNum - 1) )} tabindex="-1">Previous</a>                </li>            );        }    }    // 다음 페이지 이동 버튼    isPagingNext() {        if(this.state.paging.prev) {            return (                <li className="page-item">                    <a className="page-link" onClick = {() => this.listRecruit( (this.state.paging.currentPageNum + 1) )} tabindex="-1">Next</a>                </li>            )        }    }    // 첫 페이지로 이동 버튼    isMoveToFirstPage() {        if (this.state.p_num != 1) {            return (                <li className="page-item">                    <a className="page-link" onClick = {() => this.listRecruit(1)} tabIndex="-1">Move to First Page</a>                </li>            );        }    }    // 마지막 페이지로 이동 버튼튼    isMoveToLastPage() {        if (this.state.p_num != this.state.paging.pageNumCountTotal) {            return (                <li className="page-item">                    <a className="page-link" onClick = {() => this.listRecruit( (this.state.paging.pageNumCountTotal) )} tabIndex="-1">LastPage({this.state.paging.pageNumCountTotal})</a>                </li>            );        }    } */     render() {        const imagestyle = {            height:45,            width:45        };        return (            <div className = "listRecruit">                <h2 className="text-center" id="listTitle">게시판</h2>                    <div className ="row">                        <table className="listTable" style={{width:"80%"}}>                            <thead>                                <tr>                                    <th style={{width:"5%"}}>번호</th>                                    <th style={{width:"10%"}}>Type</th>                                    <th className="title">제목</th>                                    <th style={{width:"15%"}}>작성자</th>                                    <th style={{width:"15%"}}>작성일</th>                                </tr>                            </thead>                            <tbody>                                {                                    this.state.recruits.map(                                        recruit =>                                        <tr key = {recruit.recruit_id}>                                            <td> <a onClick = { () => this.readRecruit(recruit.recruit_id)}>{recruit.recruit_id} </a> </td>                                            <td> <a onClick = { () => this.readRecruit(recruit.recruit_id)}>{recruit.room_type} </a> </td>                                            <td className="title"> <a onClick = { () => this.readRecruit(recruit.recruit_id)}> {recruit.title} </a></td>                                            <td> <a onClick = { () => this.readRecruit(recruit.recruit_id)}>{recruit.user_id} </a> </td>                                            <td> <a onClick = { () => this.readRecruit(recruit.recruit_id)}>{recruit.date} </a></td>                                        </tr>                                    )                                }                            </tbody>                        </table>                        <div className = "writeRow">                            <button className="btn btn-primary" id="writeBtn" onClick={this.createRecruit}>게시글 작성</button>                        </div>                        <Pagination                            activePage={this.state.activePage}                            itemsCountPerPage={10}                            totalItemsCount={450}                            pageRangeDisplayed={5}                            onChange={this.handlePageChange.bind(this)}                        />                    </div>                    <Link to="/main" id="homeBtn"><img src={Home} style={imagestyle}/></Link>                </div>            );        }    }export default ListRecruitComponent;